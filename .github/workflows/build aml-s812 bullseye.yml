name: build onecloud image

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/fat-wang/onecloud-build/main/compile-kernel/tools/script/ubuntu2204-build-armbian-depends)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          echo "COMPILE_STARTINGTIME=$(date +"%m.%d.%H%M")" >> $GITHUB_ENV

          ARR_BRANCH=("edge" "current")
          set_branch="${{ github.event.inputs.set_branch }}"
          if  [[ -z "${set_branch}" || -z "$(echo "${ARR_BRANCH[@]}" | grep -w "${set_branch}")" ]]; then
              set_branch="current"
          fi
          echo "ARMBIAN_BRANCH=${set_branch}" >> $GITHUB_ENV

          ARR_RELEASE=("jammy" "focal" "bullseye")
          set_release="${{ github.event.inputs.set_release }}"
          if  [[ -z "${set_release}" || -z "$(echo "${ARR_RELEASE[@]}" | grep -w "${set_release}")" ]]; then
              set_release="focal"
          fi
          echo "ARMBIAN_RELEASE=${set_release}" >> $GITHUB_ENV

          ARR_BOARD=("odroidn2" "lepotato")
          set_board="${{ github.event.inputs.set_board }}"
          if  [[ -z "${set_board}" || -z "$(echo "${ARR_BOARD[@]}" | grep -w "${set_board}")" ]]; then
              set_board="odroidn2"
          fi
          echo "ARMBIAN_BOARD=${set_board}" >> $GITHUB_ENV

          # Desktop Environment Options: https://github.com/armbian/build/tree/master/config/desktop/bullseye/environments
          ARR_DESKTOP=("no" "budgie" "cinnamon" "gnome" "mate" "xmonad" "xfce")
          set_desktop="${{ github.event.inputs.set_desktop }}"
          if  [[ "${set_desktop}" != "no" && -n "$(echo "${ARR_DESKTOP[@]}" | grep -w "${set_desktop}")" ]]; then
              # Desktop configuration: https://github.com/armbian/build/tree/master/config/desktop
              str_desktop="BUILD_DESKTOP=yes DESKTOP_ENVIRONMENT=${set_desktop} DESKTOP_ENVIRONMENT_CONFIG_NAME=config_basic"
              edition_name="${set_desktop}_desktop"
          else
              str_desktop="BUILD_DESKTOP=no"
              edition_name="server"
          fi
          echo "ARMBIAN_DESKTOP_STR=${str_desktop}" >> $GITHUB_ENV
          echo "ARMBIAN_DESKTOP_OPT=${edition_name}" >> $GITHUB_ENV

          set_armbian_sign="${{ github.event.inputs.armbian_sign }}"
          [[ -z "${set_armbian_sign}" ]] && set_armbian_sign="_${edition_name}"
          echo "ARMBIAN_CUSTOM_NAME=${set_armbian_sign}" >> $GITHUB_ENV
      - name: Checkout armbian/build
        run: |
          git clone --depth=1 --branch=codebase-merge-witallwang https://github.com/soulteary/armbian-build-s805


      - name: Build for aml-s812
        run: |
          cd armbian-build-s805
          sudo ./compile.sh  BOARD=aml-s812 BRANCH=current RELEASE=bullseye BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,gpg,img DOWNLOAD_MIRROR=china MAINLINE_MIRROR=tuna EXTRAWIFI=no

      - uses: actions/upload-artifact@v4
        with:
          name: built-images
          path: Build-Armbian/output/images/
